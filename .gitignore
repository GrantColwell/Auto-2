package ca._4976.sub;

import ca._4976.io.Output;
import ca._4976.io.Input;
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.IterativeRobot;
import edu.wpi.first.wpilibj.SampleRobot;
import edu.wpi.first.wpilibj.Ultrasonic;


/**
 * Created by Grant on 2/9/2016.
 */
public class Auto extends IterativeRobot {
    public void autonomousInit(){}
    public void autonomousPeriodic() {

            int defence = 0;

            switch (defence) {

                case 0:
                    Output.PneumaticSolenoid.Intake.set(false);
                    Output.PneumaticSolenoid.HOOD.set(false);
                    Output.Motor.Left_Drive_Front.set(1.0);
                    Output.Motor.Left_Drive_Back.set(1.0);
                    Output.Motor.Right_Drive_Front.set(1.0);
                    Output.Motor.Right_Drive_Back.set(1.0);


                if (Input.Digital.Over_Defence.get()) {
                    Output.Motor.Left_Drive_Front.set(0.0);
                    Output.Motor.Left_Drive_Back.set(0.0);
                    Output.Motor.Right_Drive_Front.set(0.0);
                    Output.Motor.Right_Drive_Back.set(0.0);

                }

                    public class RobotTemplate extends SampleRobot {
                        Ultrasonic ultra = new Ultrasonic(1, 1); // creates the ultra object andassigns ultra to be an ultrasonic sensor which uses DigitalOutput 1 for

                        // the echo pulse and DigitalInput 1 for the trigger pulse
                        public void robotInit() {
                            ultra.setAutomaticMode(true); // turns on automatic mode
                        }

                        public void ultrasonicSample() {
                            double range = ultra.getRangeInches(); // reads the range on the ultrasonic sensor
                        }
                    }

                break;

                case 1:
                    Output.Motor.Left_Drive_Front.set(1.0);
                    Output.Motor.Left_Drive_Back.set(1.0);
                    Output.Motor.Right_Drive_Front.set(1.0);
                    Output.Motor.Right_Drive_Back.set(1.0);

                    if (Input.Digital.Over_Defence.get()) {

                        Output.Motor.Left_Drive_Front.set(0.0);
                        Output.Motor.Left_Drive_Back.set(0.0);
                        Output.Motor.Right_Drive_Front.set(0.0);
                        Output.Motor.Right_Drive_Back.set(0.0);


                    }

            }
        }
    }

